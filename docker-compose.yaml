version: '3'

services:

  api:
    build:
      context: ./notification-api
    restart: on-failure
    entrypoint: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      API_RABBIT_HOST: ${API_RABBIT_HOST:-rabbit}
      API_RABBIT_PORT: ${API_RABBIT_PORT:-5672}
      API_POSTGRES_HOST: ${API_POSTGRES_HOST:-postgres}
      API_POSTGRES_PORT: ${API_POSTGRES_PORT:-5432}
    ports:
      - "8001:8001"

  admin_notifications:
    build: admin
    container_name: django-admin
    volumes:
      - static_volume:/opt/admin/static
      - media_volume:/opt/admin/media
    env_file:
      - .env
    environment:
      PG_ADMIN_NF_DB_HOST: ${PG_ADMIN_NF_DB_HOST:-postgres}
      PG_ADMIN_NF_DB_PORT: ${PG_ADMIN_NF_DB_PORT:-5432}
    depends_on:
      - postgres
    expose:
      - "8000"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/opt/admin/static
      - media_volume:/opt/admin/media
    depends_on:
      - admin_notifications
      - api
    ports:
      - "80:80"

  notification-notify:
    build:
      context: "./notification_service"
      args:
        - COMMAND=notify
    env_file: 
      - .env
    depends_on:
      rabbit:
        condition: service_started
      mailpit:
        condition: service_started
      notification-rabbit:
        condition: service_completed_successfully
    environment:
      NOTIFY_RABBIT_HOST: ${NOTIFY_RABBIT_HOST:-rabbit}
      NOTIFY_RABBIT_PORT: ${NOTIFY_RABBIT_PORT:-5672}
      NOTIFY_POSTGRES_HOST: ${NOTIFY_POSTGRES_HOST:-postgres}
      NOTIFY_POSTGRES_PORT: ${NOTIFY_POSTGRES_PORT:-5432}

  notification-user:
    build:
      context: "./notification_service"
      args:
        - COMMAND=user
    env_file: 
      - .env
    depends_on:
      rabbit:
        condition: service_started
      postgres:
        condition: service_started
      notification-rabbit:
        condition: service_completed_successfully
    environment:
      NOTIFY_RABBIT_HOST: ${NOTIFY_RABBIT_HOST:-rabbit}
      NOTIFY_RABBIT_PORT: ${NOTIFY_RABBIT_PORT:-5672}
      NOTIFY_POSTGRES_HOST: ${NOTIFY_POSTGRES_HOST:-postgres}
      NOTIFY_POSTGRES_PORT: ${NOTIFY_POSTGRES_PORT:-5432}

  notification-rabbit:
    build:
      context: "./notification_service"
      args:
        - COMMAND=rabbit
    env_file: 
      - .env
    depends_on:
      - rabbit
    environment:
      NOTIFY_RABBIT_HOST: ${NOTIFY_RABBIT_HOST:-rabbit}
      NOTIFY_RABBIT_PORT: ${NOTIFY_RABBIT_PORT:-5672}
      NOTIFY_POSTGRES_HOST: ${NOTIFY_POSTGRES_HOST:-postgres}
      NOTIFY_POSTGRES_PORT: ${NOTIFY_POSTGRES_PORT:-5432}

  rabbit:
    build:
      context: "./rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672

  postgres:
    image: postgres:alpine3.19
    volumes:
      - ./inserts.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  mailpit:
    container_name: mailpit
    restart: on-failure
    image: axllent/mailpit:latest
    environment:
      - MP_SMTP_AUTH_ALLOW_INSECURE=true
      - MP_SMTP_AUTH_ACCEPT_ANY=true
    ports:
      - '8025:8025'
      - '1025:1025'

volumes:
  db_volume:
  static_volume:
  media_volume: